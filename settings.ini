# info related to IC generation

IC generator = basic

template file = sc1_crystal.dat     # file (Gadget-2 format) containing homogeneous particle template
tiling factor = 16                  # number of times the template shall be repeated in each direction
                                    # total number of particles will be N_template * (tiling factor)^3

Tk file = class_tk.dat              # file containing tabulated transfer functions (densities and velocities)
                                    # at initial redshift (ASCII file in CLASS format assumed)
baryon treatment = blend            # possible choices are "ignore", "sample", "blend" (default) and "hybrid"

seed = 12345                        # initial seed for random number generator
correct displacement = yes          # if "yes" the IC generator will try to fold the template pattern
                                    # into the convolution kernel of the displacement field
k-domain = sphere                   # possible choices are "sphere" or "cube"


# primordial power spectrum

k_pivot = 0.05                      # in units of inverse Mpc (not h/Mpc!)
A_s = 2.215e-9
n_s = 0.9619


# cosmological parameters

h           = 0.67556
omega_b     = 0.022032
omega_cdm   = 0.12038
T_cmb       = 2.7255                # in units of K
N_ur        = 3.046


# simulation settings

initial redshift    = 100.0
boxsize             = 320.0         # in units of Mpc/h

Ngrid               = 64
Courant factor      = 48.0
time step limit     = 0.04          # in units of Hubble time

gravity theory      = f(R)          # possible choices are "GR" or "Newton" or "f(R)"
vector method       = parabolic     # possible choices are "parabolic" or "elliptic"

# f(R) setting

background file     = background.txt   # file containing the background. (tau a H R)
f(R) parameters     = 1.E-8, 2.0       # Parameters for f(R) model
f(R) type           = RN               # f(R)=R^n : RN, Hu-Sawicki : HS
# Hu-Sawicki Model: arXiv:0705.1158
# M := m^2, B := c1, D := c2 (comparison between these values and the nomenclature of the original paper)
# Model: f(R) = R + F(R)
# F(R) = -M * B * (R/M)**N / (1 + D*(R/M)**N)
f(R) epsilon        = 0.1

read background from file   = false  # if false, compute background with RK4 even in f(R)
                             # if true, load bg from external file and interpolate

# output

output path         = output/
generic file base   = lcdm
snapshot file base  = lcdm_snap
Pk file base        = lcdm_pk
Pk bins             = 1024
snapshot redshifts  = 99
snapshot outputs    = phi, B, chi, Gadget2
Pk redshifts        = 99
Pk outputs          = phi, B, chi, hij


# additional parameters used by CLASS (in order to generate the transfer functions)

output              = mPk, dTk, vTk
gauge               = Newtonian
P_k_ini type        = analytic_Pk
P_k_max_h/Mpc       = 192           # has to be large enough (otherwise IC generator may crash)
z_pk                = 100           # should be equal to initial redshift
root                = class_
background_verbose  = 1
spectra_verbose     = 1
output_verbose      = 1
